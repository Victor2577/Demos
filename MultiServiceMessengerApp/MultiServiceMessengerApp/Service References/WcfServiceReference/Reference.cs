//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MultiServiceMessengerApp.WcfServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfServiceReference.IWcfMessengerService")]
    public interface IWcfMessengerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfMessengerService/CreateMessage", ReplyAction="http://tempuri.org/IWcfMessengerService/CreateMessageResponse")]
        Common.Models.ServerResponse CreateMessage(Common.Models.Message message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWcfMessengerService/CreateMessage", ReplyAction="http://tempuri.org/IWcfMessengerService/CreateMessageResponse")]
        System.IAsyncResult BeginCreateMessage(Common.Models.Message message, System.AsyncCallback callback, object asyncState);
        
        Common.Models.ServerResponse EndCreateMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfMessengerService/GetMessage", ReplyAction="http://tempuri.org/IWcfMessengerService/GetMessageResponse")]
        Common.Models.ServerResponse<Common.Models.Message> GetMessage(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWcfMessengerService/GetMessage", ReplyAction="http://tempuri.org/IWcfMessengerService/GetMessageResponse")]
        System.IAsyncResult BeginGetMessage(int id, System.AsyncCallback callback, object asyncState);
        
        Common.Models.ServerResponse<Common.Models.Message> EndGetMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfMessengerService/GetAllMessages", ReplyAction="http://tempuri.org/IWcfMessengerService/GetAllMessagesResponse")]
        Common.Models.ServerResponse<System.Collections.Generic.List<Common.Models.Message>> GetAllMessages();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWcfMessengerService/GetAllMessages", ReplyAction="http://tempuri.org/IWcfMessengerService/GetAllMessagesResponse")]
        System.IAsyncResult BeginGetAllMessages(System.AsyncCallback callback, object asyncState);
        
        Common.Models.ServerResponse<System.Collections.Generic.List<Common.Models.Message>> EndGetAllMessages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfMessengerService/UpdateMessage", ReplyAction="http://tempuri.org/IWcfMessengerService/UpdateMessageResponse")]
        Common.Models.ServerResponse UpdateMessage(int id, string message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWcfMessengerService/UpdateMessage", ReplyAction="http://tempuri.org/IWcfMessengerService/UpdateMessageResponse")]
        System.IAsyncResult BeginUpdateMessage(int id, string message, System.AsyncCallback callback, object asyncState);
        
        Common.Models.ServerResponse EndUpdateMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfMessengerService/DeleteMessage", ReplyAction="http://tempuri.org/IWcfMessengerService/DeleteMessageResponse")]
        Common.Models.ServerResponse DeleteMessage(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWcfMessengerService/DeleteMessage", ReplyAction="http://tempuri.org/IWcfMessengerService/DeleteMessageResponse")]
        System.IAsyncResult BeginDeleteMessage(int id, System.AsyncCallback callback, object asyncState);
        
        Common.Models.ServerResponse EndDeleteMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfMessengerService/DeleteAllMessages", ReplyAction="http://tempuri.org/IWcfMessengerService/DeleteAllMessagesResponse")]
        Common.Models.ServerResponse DeleteAllMessages();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWcfMessengerService/DeleteAllMessages", ReplyAction="http://tempuri.org/IWcfMessengerService/DeleteAllMessagesResponse")]
        System.IAsyncResult BeginDeleteAllMessages(System.AsyncCallback callback, object asyncState);
        
        Common.Models.ServerResponse EndDeleteAllMessages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfMessengerService/UploadGarbageData", ReplyAction="http://tempuri.org/IWcfMessengerService/UploadGarbageDataResponse")]
        Common.Models.ServerResponse UploadGarbageData(System.IO.MemoryStream garbageData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWcfMessengerService/UploadGarbageData", ReplyAction="http://tempuri.org/IWcfMessengerService/UploadGarbageDataResponse")]
        System.IAsyncResult BeginUploadGarbageData(System.IO.MemoryStream garbageData, System.AsyncCallback callback, object asyncState);
        
        Common.Models.ServerResponse EndUploadGarbageData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfMessengerServiceChannel : MultiServiceMessengerApp.WcfServiceReference.IWcfMessengerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Common.Models.ServerResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Common.Models.ServerResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Common.Models.ServerResponse<Common.Models.Message> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Common.Models.ServerResponse<Common.Models.Message>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Common.Models.ServerResponse<System.Collections.Generic.List<Common.Models.Message>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Common.Models.ServerResponse<System.Collections.Generic.List<Common.Models.Message>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Common.Models.ServerResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Common.Models.ServerResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Common.Models.ServerResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Common.Models.ServerResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteAllMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteAllMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Common.Models.ServerResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Common.Models.ServerResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadGarbageDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadGarbageDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Common.Models.ServerResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Common.Models.ServerResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfMessengerServiceClient : System.ServiceModel.ClientBase<MultiServiceMessengerApp.WcfServiceReference.IWcfMessengerService>, MultiServiceMessengerApp.WcfServiceReference.IWcfMessengerService {
        
        private BeginOperationDelegate onBeginCreateMessageDelegate;
        
        private EndOperationDelegate onEndCreateMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCreateMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMessageDelegate;
        
        private EndOperationDelegate onEndGetMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMessagesDelegate;
        
        private EndOperationDelegate onEndGetAllMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMessageDelegate;
        
        private EndOperationDelegate onEndUpdateMessageDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteMessageDelegate;
        
        private EndOperationDelegate onEndDeleteMessageDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAllMessagesDelegate;
        
        private EndOperationDelegate onEndDeleteAllMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAllMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadGarbageDataDelegate;
        
        private EndOperationDelegate onEndUploadGarbageDataDelegate;
        
        private System.Threading.SendOrPostCallback onUploadGarbageDataCompletedDelegate;
        
        public WcfMessengerServiceClient() {
        }
        
        public WcfMessengerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WcfMessengerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfMessengerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfMessengerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<CreateMessageCompletedEventArgs> CreateMessageCompleted;
        
        public event System.EventHandler<GetMessageCompletedEventArgs> GetMessageCompleted;
        
        public event System.EventHandler<GetAllMessagesCompletedEventArgs> GetAllMessagesCompleted;
        
        public event System.EventHandler<UpdateMessageCompletedEventArgs> UpdateMessageCompleted;
        
        public event System.EventHandler<DeleteMessageCompletedEventArgs> DeleteMessageCompleted;
        
        public event System.EventHandler<DeleteAllMessagesCompletedEventArgs> DeleteAllMessagesCompleted;
        
        public event System.EventHandler<UploadGarbageDataCompletedEventArgs> UploadGarbageDataCompleted;
        
        public Common.Models.ServerResponse CreateMessage(Common.Models.Message message) {
            return base.Channel.CreateMessage(message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateMessage(Common.Models.Message message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateMessage(message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Common.Models.ServerResponse EndCreateMessage(System.IAsyncResult result) {
            return base.Channel.EndCreateMessage(result);
        }
        
        private System.IAsyncResult OnBeginCreateMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Common.Models.Message message = ((Common.Models.Message)(inValues[0]));
            return this.BeginCreateMessage(message, callback, asyncState);
        }
        
        private object[] OnEndCreateMessage(System.IAsyncResult result) {
            Common.Models.ServerResponse retVal = this.EndCreateMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateMessageCompleted(object state) {
            if ((this.CreateMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateMessageCompleted(this, new CreateMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateMessageAsync(Common.Models.Message message) {
            this.CreateMessageAsync(message, null);
        }
        
        public void CreateMessageAsync(Common.Models.Message message, object userState) {
            if ((this.onBeginCreateMessageDelegate == null)) {
                this.onBeginCreateMessageDelegate = new BeginOperationDelegate(this.OnBeginCreateMessage);
            }
            if ((this.onEndCreateMessageDelegate == null)) {
                this.onEndCreateMessageDelegate = new EndOperationDelegate(this.OnEndCreateMessage);
            }
            if ((this.onCreateMessageCompletedDelegate == null)) {
                this.onCreateMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCreateMessageDelegate, new object[] {
                        message}, this.onEndCreateMessageDelegate, this.onCreateMessageCompletedDelegate, userState);
        }
        
        public Common.Models.ServerResponse<Common.Models.Message> GetMessage(int id) {
            return base.Channel.GetMessage(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMessage(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMessage(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Common.Models.ServerResponse<Common.Models.Message> EndGetMessage(System.IAsyncResult result) {
            return base.Channel.EndGetMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BeginGetMessage(id, callback, asyncState);
        }
        
        private object[] OnEndGetMessage(System.IAsyncResult result) {
            Common.Models.ServerResponse<Common.Models.Message> retVal = this.EndGetMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMessageCompleted(object state) {
            if ((this.GetMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMessageCompleted(this, new GetMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMessageAsync(int id) {
            this.GetMessageAsync(id, null);
        }
        
        public void GetMessageAsync(int id, object userState) {
            if ((this.onBeginGetMessageDelegate == null)) {
                this.onBeginGetMessageDelegate = new BeginOperationDelegate(this.OnBeginGetMessage);
            }
            if ((this.onEndGetMessageDelegate == null)) {
                this.onEndGetMessageDelegate = new EndOperationDelegate(this.OnEndGetMessage);
            }
            if ((this.onGetMessageCompletedDelegate == null)) {
                this.onGetMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetMessageDelegate, new object[] {
                        id}, this.onEndGetMessageDelegate, this.onGetMessageCompletedDelegate, userState);
        }
        
        public Common.Models.ServerResponse<System.Collections.Generic.List<Common.Models.Message>> GetAllMessages() {
            return base.Channel.GetAllMessages();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMessages(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMessages(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Common.Models.ServerResponse<System.Collections.Generic.List<Common.Models.Message>> EndGetAllMessages(System.IAsyncResult result) {
            return base.Channel.EndGetAllMessages(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllMessages(callback, asyncState);
        }
        
        private object[] OnEndGetAllMessages(System.IAsyncResult result) {
            Common.Models.ServerResponse<System.Collections.Generic.List<Common.Models.Message>> retVal = this.EndGetAllMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMessagesCompleted(object state) {
            if ((this.GetAllMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMessagesCompleted(this, new GetAllMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMessagesAsync() {
            this.GetAllMessagesAsync(null);
        }
        
        public void GetAllMessagesAsync(object userState) {
            if ((this.onBeginGetAllMessagesDelegate == null)) {
                this.onBeginGetAllMessagesDelegate = new BeginOperationDelegate(this.OnBeginGetAllMessages);
            }
            if ((this.onEndGetAllMessagesDelegate == null)) {
                this.onEndGetAllMessagesDelegate = new EndOperationDelegate(this.OnEndGetAllMessages);
            }
            if ((this.onGetAllMessagesCompletedDelegate == null)) {
                this.onGetAllMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMessagesDelegate, null, this.onEndGetAllMessagesDelegate, this.onGetAllMessagesCompletedDelegate, userState);
        }
        
        public Common.Models.ServerResponse UpdateMessage(int id, string message) {
            return base.Channel.UpdateMessage(id, message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateMessage(int id, string message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMessage(id, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Common.Models.ServerResponse EndUpdateMessage(System.IAsyncResult result) {
            return base.Channel.EndUpdateMessage(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            string message = ((string)(inValues[1]));
            return this.BeginUpdateMessage(id, message, callback, asyncState);
        }
        
        private object[] OnEndUpdateMessage(System.IAsyncResult result) {
            Common.Models.ServerResponse retVal = this.EndUpdateMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateMessageCompleted(object state) {
            if ((this.UpdateMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMessageCompleted(this, new UpdateMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMessageAsync(int id, string message) {
            this.UpdateMessageAsync(id, message, null);
        }
        
        public void UpdateMessageAsync(int id, string message, object userState) {
            if ((this.onBeginUpdateMessageDelegate == null)) {
                this.onBeginUpdateMessageDelegate = new BeginOperationDelegate(this.OnBeginUpdateMessage);
            }
            if ((this.onEndUpdateMessageDelegate == null)) {
                this.onEndUpdateMessageDelegate = new EndOperationDelegate(this.OnEndUpdateMessage);
            }
            if ((this.onUpdateMessageCompletedDelegate == null)) {
                this.onUpdateMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMessageCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMessageDelegate, new object[] {
                        id,
                        message}, this.onEndUpdateMessageDelegate, this.onUpdateMessageCompletedDelegate, userState);
        }
        
        public Common.Models.ServerResponse DeleteMessage(int id) {
            return base.Channel.DeleteMessage(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteMessage(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteMessage(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Common.Models.ServerResponse EndDeleteMessage(System.IAsyncResult result) {
            return base.Channel.EndDeleteMessage(result);
        }
        
        private System.IAsyncResult OnBeginDeleteMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BeginDeleteMessage(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteMessage(System.IAsyncResult result) {
            Common.Models.ServerResponse retVal = this.EndDeleteMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteMessageCompleted(object state) {
            if ((this.DeleteMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteMessageCompleted(this, new DeleteMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteMessageAsync(int id) {
            this.DeleteMessageAsync(id, null);
        }
        
        public void DeleteMessageAsync(int id, object userState) {
            if ((this.onBeginDeleteMessageDelegate == null)) {
                this.onBeginDeleteMessageDelegate = new BeginOperationDelegate(this.OnBeginDeleteMessage);
            }
            if ((this.onEndDeleteMessageDelegate == null)) {
                this.onEndDeleteMessageDelegate = new EndOperationDelegate(this.OnEndDeleteMessage);
            }
            if ((this.onDeleteMessageCompletedDelegate == null)) {
                this.onDeleteMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteMessageCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteMessageDelegate, new object[] {
                        id}, this.onEndDeleteMessageDelegate, this.onDeleteMessageCompletedDelegate, userState);
        }
        
        public Common.Models.ServerResponse DeleteAllMessages() {
            return base.Channel.DeleteAllMessages();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteAllMessages(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAllMessages(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Common.Models.ServerResponse EndDeleteAllMessages(System.IAsyncResult result) {
            return base.Channel.EndDeleteAllMessages(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAllMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginDeleteAllMessages(callback, asyncState);
        }
        
        private object[] OnEndDeleteAllMessages(System.IAsyncResult result) {
            Common.Models.ServerResponse retVal = this.EndDeleteAllMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteAllMessagesCompleted(object state) {
            if ((this.DeleteAllMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAllMessagesCompleted(this, new DeleteAllMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAllMessagesAsync() {
            this.DeleteAllMessagesAsync(null);
        }
        
        public void DeleteAllMessagesAsync(object userState) {
            if ((this.onBeginDeleteAllMessagesDelegate == null)) {
                this.onBeginDeleteAllMessagesDelegate = new BeginOperationDelegate(this.OnBeginDeleteAllMessages);
            }
            if ((this.onEndDeleteAllMessagesDelegate == null)) {
                this.onEndDeleteAllMessagesDelegate = new EndOperationDelegate(this.OnEndDeleteAllMessages);
            }
            if ((this.onDeleteAllMessagesCompletedDelegate == null)) {
                this.onDeleteAllMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAllMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAllMessagesDelegate, null, this.onEndDeleteAllMessagesDelegate, this.onDeleteAllMessagesCompletedDelegate, userState);
        }
        
        public Common.Models.ServerResponse UploadGarbageData(System.IO.MemoryStream garbageData) {
            return base.Channel.UploadGarbageData(garbageData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUploadGarbageData(System.IO.MemoryStream garbageData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadGarbageData(garbageData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Common.Models.ServerResponse EndUploadGarbageData(System.IAsyncResult result) {
            return base.Channel.EndUploadGarbageData(result);
        }
        
        private System.IAsyncResult OnBeginUploadGarbageData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.IO.MemoryStream garbageData = ((System.IO.MemoryStream)(inValues[0]));
            return this.BeginUploadGarbageData(garbageData, callback, asyncState);
        }
        
        private object[] OnEndUploadGarbageData(System.IAsyncResult result) {
            Common.Models.ServerResponse retVal = this.EndUploadGarbageData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadGarbageDataCompleted(object state) {
            if ((this.UploadGarbageDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadGarbageDataCompleted(this, new UploadGarbageDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadGarbageDataAsync(System.IO.MemoryStream garbageData) {
            this.UploadGarbageDataAsync(garbageData, null);
        }
        
        public void UploadGarbageDataAsync(System.IO.MemoryStream garbageData, object userState) {
            if ((this.onBeginUploadGarbageDataDelegate == null)) {
                this.onBeginUploadGarbageDataDelegate = new BeginOperationDelegate(this.OnBeginUploadGarbageData);
            }
            if ((this.onEndUploadGarbageDataDelegate == null)) {
                this.onEndUploadGarbageDataDelegate = new EndOperationDelegate(this.OnEndUploadGarbageData);
            }
            if ((this.onUploadGarbageDataCompletedDelegate == null)) {
                this.onUploadGarbageDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadGarbageDataCompleted);
            }
            base.InvokeAsync(this.onBeginUploadGarbageDataDelegate, new object[] {
                        garbageData}, this.onEndUploadGarbageDataDelegate, this.onUploadGarbageDataCompletedDelegate, userState);
        }
    }
}
